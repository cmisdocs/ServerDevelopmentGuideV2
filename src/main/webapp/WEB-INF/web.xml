<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
    xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>FileBridge Server</display-name>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <listener>
        <listener-class>org.apache.chemistry.opencmis.server.impl.CmisRepositoryContextListener</listener-class>
    </listener>
    
    <!-- 
        Consider adding an authentication filter that checks the user credentials before
        the request is forwarded to OpenCMIS.
    -->
    <!-- - ->
    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>your.auth.filterClass</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <servlet-name>cmisatom10</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <servlet-name>cmisatom11</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <servlet-name>cmisws10</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <servlet-name>cmisws11</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <servlet-name>cmisbrowser</servlet-name> 
    </filter-mapping>
    <!- - -->
    
    <!-- 
         A servlet filter that logs all requests in files. Useful for monitoring and debugging.
         Use it with care! It can generate a huge amount of files and will slow down performance
         significantly.
    -->
    <!--
    <filter>
        <filter-name>LoggingFilter</filter-name>
        <filter-class>org.apache.chemistry.opencmis.server.support.filter.LoggingFilter</filter-class>
        <init-param>
            <param-name>LogDir</param-name>
            <param-value></param-value>
        </init-param>
        <init-param>
            <param-name>PrettyPrint</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>LogHeader</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>Indent</param-name>
            <param-value>4</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <servlet-name>cmisatom10</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <servlet-name>cmisatom11</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <servlet-name>cmisws10</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <servlet-name>cmisws11</servlet-name> 
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <servlet-name>cmisbrowser</servlet-name> 
    </filter-mapping>
    -->
    
    <!--
        Uncomment the following filter to enable CORS support for the browser binding.
        See http://software.dzhuvinov.com/cors-filter.html for details.
        Put the CORS libraries into the WEB-INF/lib directory or uncomment the CORS dependency
        in the pom.xml.
    -->
    <!--
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowGenericHttpRequests</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowSubdomains</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET, POST</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value></param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cors.maxAge</param-name>
            <param-value>3600</param-value>
        </init-param>
        <init-param>
            <param-name>cors.tagRequests</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CORS</filter-name>
        <servlet-name>cmisbrowser</servlet-name>
    </filter-mapping>
    -->

    <servlet>
        <servlet-name>cmisws10</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.webservices.CmisWebServicesServlet</servlet-class>
        <init-param>
            <description>CMIS version of this endpoint</description>
            <param-name>cmisVersion</param-name>
            <param-value>1.0</param-value>
        </init-param>
        <!--
        <init-param>
            <description>Name of the CSRF header</description>
            <param-name>csrfHeader</param-name>
            <param-value>X-CSRF-Token</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>cmisws11</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.webservices.CmisWebServicesServlet</servlet-class>
        <init-param>
            <description>CMIS version of this endpoint</description>
            <param-name>cmisVersion</param-name>
            <param-value>1.1</param-value>
        </init-param>
        <!--
        <init-param>
            <description>Name of the CSRF header</description>
            <param-name>csrfHeader</param-name>
            <param-value>X-CSRF-Token</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>cmisatom10</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.atompub.CmisAtomPubServlet</servlet-class>
        <init-param>
            <description>Call Context Handler implementation</description>
            <param-name>callContextHandler</param-name>
            <param-value>org.apache.chemistry.opencmis.server.shared.BasicAuthCallContextHandler</param-value>
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.UserPrincipalCallContextHandler</param-value> -->
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.AttributeCallContextHandler</param-value> -->
        </init-param>
        <init-param>
            <description>CMIS version of this endpoint</description>
            <param-name>cmisVersion</param-name>
            <param-value>1.0</param-value>
        </init-param>
        <!--
        <init-param>
            <description>Name of the CSRF header</description>
            <param-name>csrfHeader</param-name>
            <param-value>X-CSRF-Token</param-value>
        </init-param>
        -->
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>cmisatom11</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.atompub.CmisAtomPubServlet</servlet-class>
        <init-param>
            <description>Call Context Handler implementation</description>
            <param-name>callContextHandler</param-name>
            <param-value>org.apache.chemistry.opencmis.server.shared.BasicAuthCallContextHandler</param-value>
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.UserPrincipalCallContextHandler</param-value> -->
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.AttributeCallContextHandler</param-value> -->
        </init-param>
        <init-param>
            <description>CMIS version of this endpoint</description>
            <param-name>cmisVersion</param-name>
            <param-value>1.1</param-value>
        </init-param>
        <!--
        <init-param>
            <description>Name of the CSRF header</description>
            <param-name>csrfHeader</param-name>
            <param-value>X-CSRF-Token</param-value>
        </init-param>
        -->
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>cmisbrowser</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.browser.CmisBrowserBindingServlet</servlet-class>
        <init-param>
            <description>Call Context Handler implementation</description>
            <param-name>callContextHandler</param-name>
            <param-value>org.apache.chemistry.opencmis.server.impl.browser.token.TokenCallContextHandler</param-value>
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.UserPrincipalCallContextHandler</param-value> -->
            <!-- <param-value>org.apache.chemistry.opencmis.server.shared.AttributeCallContextHandler</param-value> -->
        </init-param>
        <!--
        <init-param>
            <description>Name of the CSRF header</description>
            <param-name>csrfHeader</param-name>
            <param-value>X-CSRF-Token</param-value>
        </init-param>
        -->
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>cmisendpoints</servlet-name>
        <servlet-class>org.apache.chemistry.opencmis.server.impl.endpoints.SimpleCmisEndpointsDocumentServlet</servlet-class>
        <init-param>
            <param-name>template</param-name>
            <param-value>/WEB-INF/cmis-endpoints.json</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>cmisws10</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>cmisws11</servlet-name>
        <url-pattern>/services11/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>cmisatom10</servlet-name>
        <url-pattern>/atom/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>cmisatom11</servlet-name>
        <url-pattern>/atom11/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>cmisbrowser</servlet-name>
        <url-pattern>/browser/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>cmisendpoints</servlet-name>
        <url-pattern>/cmis-endpoints.json</url-pattern>
    </servlet-mapping>
</web-app>
